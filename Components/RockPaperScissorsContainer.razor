<div class="text-center">
@if (!roundEnded)
{
    <div style="display:flex; place-content:center">
            <Card OnCardSelected=RoundEnd CardType="CardChoice.Rock" />
            <Card OnCardSelected=RoundEnd CardType="CardChoice.Paper" />
            <Card OnCardSelected=RoundEnd CardType="CardChoice.Scissors" />
    </div>
}
@if (roundEnded)
{
        <div style="display:flex; place-content:center">
        <Card CardType="@currentRound.PlayerSelection" />
            <Card CardType="@currentRound.ComputerSelection" />
    </div>
}

<div>
    <input type="checkbox" @bind-value=enableLevelTwo /> Enable Level 2
</div>

<div>
    <h4>@message</h4>
    <h4>Wins: @winCount</h4>
</div>

<div>
    <button class="btn btn-primary" @onclick="ResetGame">Reset</button>
</div>
</div>
@code {
    private int winCount = 0;
    private string message = "Select a choice";
    private bool enableLevelTwo;
    private bool roundEnded;
    private GameRound currentRound = new();
    List<GameRound> rounds = new();

    private void RoundEnd(CardChoice playerSelected)
    {
        roundEnded = true;
        currentRound.PlayerSelection = playerSelected;
        currentRound.ComputerSelection = GetComputerSelected();

        currentRound.Winner = CalculateWinner(currentRound);

        if(currentRound.Winner == 0)
        {
            message = "Tie";
        }
        else if(currentRound.Winner == 1)
        {
            message = "You Win";
            winCount++;
        }
        else if(currentRound.Winner == 2)
        {
            message = "You Lose";
            winCount = 0;
        }

        rounds.Add(currentRound);
    }

    private int CalculateWinner(GameRound gameRound)
    {
        CardChoice playerChoice = gameRound.PlayerSelection;
        CardChoice compChoice = gameRound.ComputerSelection;

        if (playerChoice == CardChoice.Rock)
        {
            if (compChoice == CardChoice.Rock)
            {
                return 0;
            }
            else if (compChoice == CardChoice.Paper)
            {
                return 2;
            }
            else if (compChoice == CardChoice.Scissors)
            {
                return 1;
            }
        }
        else if (playerChoice == CardChoice.Paper)
        {
            if (compChoice == CardChoice.Rock)
            {
                return 1;
            }
            else if (compChoice == CardChoice.Paper)
            {
                return 0;
            }
            else if (compChoice == CardChoice.Scissors)
            {
                return 2;
            }
        }
        else if (playerChoice == CardChoice.Scissors)
        {
            if (compChoice == CardChoice.Rock)
            {
                return 2;
            }
            else if (compChoice == CardChoice.Paper)
            {
                return 1;
            }
            else if (compChoice == CardChoice.Scissors)
            {
                return 0;
            }
        }

        return 0;
    }

    private CardChoice GetComputerSelected()
    {
        if (enableLevelTwo)
        {
            if (rounds.Count() > 1)
            {
                return(rounds[rounds.Count - 1].PlayerSelection);
            }
        }
        return RandomSelection();
    }

    private CardChoice RandomSelection()
    {
        Random rnd = new Random();
        int selected = rnd.Next(1, 4);
        return selected == 1 ? CardChoice.Rock : selected == 2 ? CardChoice.Paper : CardChoice.Scissors;
    }

    private void ResetGame()
    {
        roundEnded = false;
        currentRound = new();
        message = "Select a choice";
    }

    public class GameRound
    {
        public CardChoice PlayerSelection { get; set; }
        public CardChoice ComputerSelection { get; set; }
        public int Winner { get; set; }
    }
}
